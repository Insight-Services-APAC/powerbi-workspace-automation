

stages:
- stage: Development

  variables:
    azSubscription: sp-apim-ado
    clientPrefix: wch
    env: dev
    aadObjectId: 9fb4af47-1091-4da1-a27c-db0e7f85401c
    storage: "${{ variables.clientPrefixPrefix }}syd${{ variables.env }}stapowerbi"
    apim: "${{ variables.clientPrefixPrefix }}-syd-${{ variables.env }}-api-powerbi"
    rg: "${{ variables.clientPrefixPrefix }}-syd-${{ variables.env }}-arg-powerbi"
    func: "${{ variables.clientPrefixPrefix }}-syd-${{ variables.env }}-fun-powerbi"
    kv: "${{ variables.clientPrefixPrefix }}-syd-${{ variables.env }}-key-powerbi"

  jobs:
  - job: Infrastructure
    condition: false
    displayName: Infrastructure Deploy
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureCLI@2
      displayName: AZ CLI - Bicep Deploy
      inputs:
        azureSubscription: ${{ variables.azSubscription }}
        scriptType: 'ps'
        workingDirectory: $(Build.SourcesDirectory)\Producer
        scriptPath: $(Build.SourcesDirectory)\Producer\scripts\deploy-infra.ps1
        arguments:
          -ClientPrefix ${{ variables.clientPrefix }} `
          -Env ${{ variables.env }} `
          -AadObjectId ${{ variables.aadObjectId }}

  - job: FunctionApp
    condition: true
    displayName: FunctionApp Build and Deploy
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureCLI@2
      displayName: AZ CLI - Function App Build and Deploy
      inputs:
        azureSubscription: ${{ variables.azSubscription }}
        scriptType: 'ps'
        workingDirectory: $(Build.SourcesDirectory)\Producer
        scriptPath: $(Build.SourcesDirectory)\Producer\scripts\deploy-func.ps1
        arguments:
          -ResourceGroup ${{ variables.rg }} `
          -FunctionApp ${{ variables.func }}
  
  - job: APIManagement
    condition: true
    displayName: APIM Deploy
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureCLI@2
      displayName: AZ CLI - APIM ARM Linked Template Deployment
      inputs:
        azureSubscription: ${{ variables.azSubscription }}
        scriptType: 'ps'
        workingDirectory: $(Build.SourcesDirectory)\Producer
        scriptPath: $(Build.SourcesDirectory)\Producer\scripts\deploy-apim.ps1
        arguments:
          -ApimName ${{ variables.apim }} `
          -ResourceGroup ${{ variables.rg }} `
          -SourcePath $(Build.SourcesDirectory)\Producer\apim `
          -StorageAccount ${{ variables.storage }} `
          -FunctionName ${{ variables.func }}